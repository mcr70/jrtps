#include "dds_rtf2_dcps_modified.idl"



module RTPS {
	typedef octet GuidPrefix_t[12];
typedef octet GuidPrefixASas_t[12];
	#define GUIDPREFIX_UNKNOWN {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}
	
	struct EntityId_t {
		octet entityKey[3];
		octet entityKind;
	};
	
	#define ENTITYID_UNKNOWN {0x00, 0x00, 0x00, 0x00}

	struct GUID_t {
		GuidPrefix_t guidPrefix;
		EntityId_t entityId;
	};

	struct Time_t {
		long seconds; // time in seconds
		unsigned long fraction; // time in sec/2^32
	};

	
	#define TIME_ZERO {0, 0}
	#define TIME_INVALID {-1, 0xffffffff}
	#define TIME_INFINITE {0x7fffffff, 0xffffffff}

	struct VendorId_t {
		octet vendorId[2];
	};

	#define VENDORID_UNKNOWN {0,0}

	struct SequenceNumber_t {
		long high;
		unsigned long low;
	};

	#define SEQUENCENUMBER_UNKNOWN {-1,0}

	struct FragmentNumber_t {
		unsigned long value;
	};

	struct Locator_t {
		long kind;
		unsigned long port;
		octet address[16];
	};

	
	#define LOCATOR_INVALID {LOCATOR_KIND_INVALID, LOCATOR_PORT_INVALID,LOCATOR_ADDRESS_INVALID}
	#define LOCATOR_KIND_INVALID -1
	#define LOCATOR_ADDRESS_INVALID {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
	#define LOCATOR_PORT_INVALID 0
	#define LOCATOR_KIND_RESERVED 0
	#define LOCATOR_KIND_UDPv4 1
	#define LOCATOR_KIND_UDPv6 2

	struct TopicKind_t {
		long value;
	};

	#define NO_KEY 1
	#define WITH_KEY 2

	struct ReliabilityKind_t {
		long value;
	};

	#define BEST_EFFORT 1
	#define RELIABLE 3

	struct Count_t {
		long value;
	};

	struct ProtocolVersion_t {
		octet major;
		octet minor;
	};

	#define PROTOCOLVERSION_1_0 {1,0}
	#define PROTOCOLVERSION_1_1 {1,1}
	#define PROTOCOLVERSION_2_0 {2,0}
	#define PROTOCOLVERSION_2_1 {2,1}
	#define PROTOCOLVERSION PROTOCOLVERSION_2_1

	struct KeyHash_t {
		octet value[16];
	};

	struct StatusInfo_t {
		octet value[4];
	};

	# TODO: This is defined differently below. Check it out
#	struct ParameterId_t {
#		short value;
#	};

	struct ContentFilterProperty_t {
		string<256> contentFilteredTopicName;
		string<256> relatedTopicName;
		string<256> filterClassName;
		string filterExpression;
		sequence<string> expressionParameters;
	};

	# TODO: FileterSignature_t missing
#	typedef struct ContentFilterInfo_t {
#		FilterResult_t filterResult;
#		sequence<FilterSignature_t> filterSignatures;
#	};

	typedef sequence<long> FilterResult_t;
	typedef long FilterSignature_t[4];

	struct Property_t{
		string name;
		string value;
	};

	struct EntityName_t {
		string name;
	};

# TODO: ParameterList missin
# struct OriginalWriterInfo_t {
#	GUID_t originalWriterGUID;
#	SequenceNumber_t originalWriterSN;
#	ParameterList originalWriterQos;
# };

	typedef unsigned long BuiltinEndpointSet_t;

	#define DISC_BUILTIN_ENDPOINT_PARTICIPANT_ANNOUNCER 0x00000001 << 0;
	#define DISC_BUILTIN_ENDPOINT_PARTICIPANT_DETECTOR 0x00000001 << 1;
	#define DISC_BUILTIN_ENDPOINT_PUBLICATION_ANNOUNCER 0x00000001 << 2;
	#define DISC_BUILTIN_ENDPOINT_PUBLICATION_DETECTOR 0x00000001 << 3;
	#define DISC_BUILTIN_ENDPOINT_SUBSCRIPTION_ANNOUNCER 0x00000001 << 4;
	#define DISC_BUILTIN_ENDPOINT_SUBSCRIPTION_DETECTOR 0x00000001 << 5;
	#define DISC_BUILTIN_ENDPOINT_PARTICIPANT_PROXY_ANNOUNCER 0x00000001 << 6;
	#define DISC_BUILTIN_ENDPOINT_PARTICIPANT_PROXY_DETECTOR 0x00000001 << 7;
	#define DISC_BUILTIN_ENDPOINT_PARTICIPANT_STATE_ANNOUNCER 0x00000001 << 8;
	#define DISC_BUILTIN_ENDPOINT_PARTICIPANT_STATE_DETECTOR 0x00000001 << 9;
	#define BUILTIN_ENDPOINT_PARTICIPANT_MESSAGE_DATA_WRITER 0x00000001 << 10;
	#define BUILTIN_ENDPOINT_PARTICIPANT_MESSAGE_DATA_READER 0x00000001 << 11;

	struct LocatorUDPv4_t {
		unsigned long address;
		unsigned long port;
	};



	typedef EntityId_t EntityId;
	typedef GuidPrefix_t GuidPrefix;
	typedef VendorId_t VendorId;
	typedef ProtocolVersion_t ProtocolVersion;
	typedef SequenceNumber_t SequenceNumber;

	struct SequenceNumberSet {
		SequenceNumber_t bitmapBase;
		sequence<long, 8> bitmap;
	};

	typedef FragmentNumber_t FragmentNumber;

	struct FragmentNumberSet {
		FragmentNumber_t bitmapBase;
		sequence<long, 8> bitmap;
	};

	typedef Time_t Timestamp;
	typedef sequence<Locator_t, 8> LocatorList;

	typedef short ParameterId_t;
	
	struct Parameter {
		ParameterId_t parameterId;
		short length;
		sequence<octet> value; # [length]
	};

	#define PID_PAD (0)
	#define PID_SENTINEL (1)
	
	typedef Count_t Count;
	typedef LocatorUDPv4_t LocatorUDPv4;

	struct SubmessageHeader {
		octet submessageId;
		octet flags;
		unsigned short submessageLength; /* octetsToNextHeader */
	};

/**  TODO: How to express this in IDL	
enum SubmessageKind {
	PAD = 0x01, 
	ACKNACK = 0x06, 
	HEARTBEAT = 0x07, 
	GAP = 0x08, 
	INFO_TS = 0x09, 
	INFO_SRC = 0x0c, 
	INFO_REPLY_IP4 = 0x0d,
	INFO_DST = 0x0e,
	INFO_REPLY = 0x0f, 
	NACK_FRAG = 0x12, 
	HEARTBEAT_FRAG = 0x13 
	DATA = 0x15, 
	DATA_FRAG = 0x16, 
};
*/



	struct ParticipantMessageData {
		GuidPrefix_t participantGuidPrefix;
		octet kind[4];
		sequence<octet> data;
	};

	#define PARTICIPANT_MESSAGE_DATA_KIND_UNKNOWN {0x00, 0x00, 0x00, 0x00}
	#define PARTICIPANT_MESSAGE_DATA_KIND_AUTOMATIC_LIVELINESS_UPDATE {0x00, 0x00, 0x00, 0x01}
	#define PARTICIPANT_MESSAGE_DATA_KIND_MANUAL_LIVELINESS_UPDATE {0x00, 0x00, 0x00, 0x02}

	struct ParticipantProxy {
		ProtocolVersion_t protocolVersion;
		GuidPrefix_t guidPrefix;
		VendorId_t vendorId;
		boolean expectsInlineQos;
	};
	
	struct WriterProxy {
		GUID_t remoteWriterGuid;
		sequence<Locator_t> unicastLocatorList;
		sequence<Locator_t> multicastLocatorList;
	};
	
	struct ReaderProxy {
		GUID_t remoteReaderGuid;
		boolean expectsInlineQos;
		sequence<Locator_t> unicastLocatorList;
		sequence<Locator_t> multicastLocatorList;
	};

	struct SPDPdiscoveredParticipantData {
		DDS::ParticipantBuiltinTopicData ddsParticipantData;
		ParticipantProxy participantProxy;
		DDS::Duration_t leaseDuration;
	};

	struct DiscoveredWriterData {
		DDS::PublicationBuiltinTopicData ddsPublicationData;
		WriterProxy writerProxy;
	};

	struct DiscoveredReaderData {
		DDS::SubscriptionBuiltinTopicData ddsSubscriptionData;
		ReaderProxy readerProxy;
		ContentFilterProperty_t contentFilterProperty;
	};

	struct DiscoveredTopicData {
		DDS::TopicBuiltinTopicData ddsTopicData;
	};

};
