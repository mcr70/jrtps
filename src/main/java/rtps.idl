typedef octet[12] GuidPrefix_t;

#define GUIDPREFIX_UNKNOWN {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}

struct {
	octet[3] entityKey;
	octet entityKind;
} EntityId_t;

#define ENTITYID_UNKNOWN {0x00, 0x00, 0x00, 0x00}

typedef struct {
	GuidPrefix_t guidPrefix;
	EntityId_t entityId;
} GUID_t;


struct {
	long seconds; // time in seconds
	unsigned long fraction; // time in sec/2^32
} Time_t;

#define TIME_ZERO {0, 0}
#define TIME_INVALID {-1, 0xffffffff}
#define TIME_INFINITE {0x7fffffff, 0xffffffff}

struct {
	octet[2] vendorId;
} VendorId_t;

#define VENDORID_UNKNOWN {0,0}

struct {
	long high;
	unsigned long low;
} SequenceNumber_t;

#define SEQUENCENUMBER_UNKNOWN {-1,0}

struct {
	unsigned long value;
} FragmentNumber_t;


struct {
	long kind;
	unsigned long port;
	octet[16] address;
} Locator_t;

#define LOCATOR_INVALID {LOCATOR_KIND_INVALID, LOCATOR_PORT_INVALID,LOCATOR_ADDRESS_INVALID}
#define LOCATOR_KIND_INVALID -1
#define LOCATOR_ADDRESS_INVALID {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
#define LOCATOR_PORT_INVALID 0
#define LOCATOR_KIND_RESERVED 0
#define LOCATOR_KIND_UDPv4 1
#define LOCATOR_KIND_UDPv6 2

struct {
	long value;
} TopicKind_t;

#define NO_KEY 1
#define WITH_KEY 2

struct {
	long value;
} ReliabilityKind_t;

#define BEST_EFFORT 1
#define RELIABLE 3

struct {
	long value;
} Count_t;

typedef struct {
	octet major;
	octet minor;
} ProtocolVersion_t;

#define PROTOCOLVERSION_1_0 {1,0}
#define PROTOCOLVERSION_1_1 {1,1}
#define PROTOCOLVERSION_2_0 {2,0}
#define PROTOCOLVERSION_2_1 {2,1}
#define PROTOCOLVERSION PROTOCOLVERSION_2_1

struct {
	octet[16] value;
} KeyHash_t;

struct {
	octet[4] value;
} StatusInfo_t;

struct {
	short value;
} ParameterId_t;

typedef struct {
	string<256> contentFilteredTopicName;
	string<256> relatedTopicName;
	string<256> filterClassName;
	string filterExpression;
	sequence<string> expressionParameters;
} ContentFilterProperty_t;

typedef struct {
	FilterResult_t filterResult;
	sequence<FilterSignature_t> filterSignatures;
} ContentFilterInfo_t;

typedef sequence<long> FilterResult_t;
typedef long[4] FilterSignature_t;

struct {
	string name;
	string value;
} Property_t;

struct {
	string name;
} EntityName_t;

struct {
	GUID_t originalWriterGUID;
	SequenceNumber_t originalWriterSN;
	ParameterList originalWriterQos;
} OriginalWriterInfo_t;

typedef unsigned long BuiltinEndpointSet_t;

#define DISC_BUILTIN_ENDPOINT_PARTICIPANT_ANNOUNCER 0x00000001 << 0;
#define DISC_BUILTIN_ENDPOINT_PARTICIPANT_DETECTOR 0x00000001 << 1;
#define DISC_BUILTIN_ENDPOINT_PUBLICATION_ANNOUNCER 0x00000001 << 2;
#define DISC_BUILTIN_ENDPOINT_PUBLICATION_DETECTOR 0x00000001 << 3;
#define DISC_BUILTIN_ENDPOINT_SUBSCRIPTION_ANNOUNCER 0x00000001 << 4;
#define DISC_BUILTIN_ENDPOINT_SUBSCRIPTION_DETECTOR 0x00000001 << 5;
#define DISC_BUILTIN_ENDPOINT_PARTICIPANT_PROXY_ANNOUNCER 0x00000001 << 6;
#define DISC_BUILTIN_ENDPOINT_PARTICIPANT_PROXY_DETECTOR 0x00000001 << 7;
#define DISC_BUILTIN_ENDPOINT_PARTICIPANT_STATE_ANNOUNCER 0x00000001 << 8;
#define DISC_BUILTIN_ENDPOINT_PARTICIPANT_STATE_DETECTOR 0x00000001 << 9;
#define BUILTIN_ENDPOINT_PARTICIPANT_MESSAGE_DATA_WRITER 0x00000001 << 10;
#define BUILTIN_ENDPOINT_PARTICIPANT_MESSAGE_DATA_READER 0x00000001 << 11;

struct {
	unsigned long address;
	unsigned long port;
} LocatorUDPv4_t;



typedef EntityId_t EntityId;
typedef GuidPrefix_t GuidPrefix;
typedef VendorId_t VendorId;
typedef ProtocolVersion_t ProtocolVersion;
typedef SequenceNumber_t SequenceNumber;

struct {
	SequenceNumber_t bitmapBase;
	sequence<long, 8> bitmap;
} SequenceNumberSet;

typedef FragmentNumber_t FragmentNumber;

struct {
	FragmentNumber_t bitmapBase;
	sequence<long, 8> bitmap;
} FragmentNumberSet;

typedef Time_t Timestamp;
typedef sequence<Locator_t, 8> LocatorList;

typedef short ParameterId_t
struct Parameter {
	ParameterId_t parameterId;
	short length;
	octet value[length];
};

#define PID_PAD (0)
#define PID_SENTINEL (1)

typedef Count_t Count;
typedef LocatorUDPv4_t LocatorUDPv4;

struct {
	octet submessageId;
	octet flags;
	unsigned short submessageLength; /* octetsToNextHeader */
} SubmessageHeader;

enum SubmessageKind {
	PAD = 0x01, /* Pad */
	ACKNACK = 0x06, /* AckNack */
	HEARTBEAT = 0x07, /* Heartbeat */
	GAP = 0x08, /* Gap */
	INFO_TS = 0x09, /* InfoTimestamp */
	INFO_SRC = 0x0c, /* InfoSource */
	INFO_REPLY_IP4 = 0x0d, /* InfoReplyIp4 */
	INFO_DST = 0x0e, /* InfoDestination */
	INFO_REPLY = 0x0f, /* InfoReply */
	NACK_FRAG = 0x12, /* NackFrag */
	HEARTBEAT_FRAG = 0x13 /* HeartbeatFrag */
	DATA = 0x15, /* Data */
	DATA_FRAG = 0x16, /* DataFrag */
};


struct ParticipantMessageData {
	GuidPrefix_t participantGuidPrefix;
	octet [4] kind;
	sequence<octet> data;
};

#define PARTICIPANT_MESSAGE_DATA_KIND_UNKNOWN {0x00, 0x00, 0x00, 0x00}
#define PARTICIPANT_MESSAGE_DATA_KIND_AUTOMATIC_LIVELINESS_UPDATE {0x00, 0x00, 0x00, 0x01}
#define PARTICIPANT_MESSAGE_DATA_KIND_MANUAL_LIVELINESS_UPDATE {0x00, 0x00, 0x00, 0x02}

struct SPDPdiscoveredParticipantData {
	struct DDS::ParticipantBuiltinTopicData ddsParticipantData;
	struct participantProxy participantProxy;
	Duration_t leaseDuration;
};

struct DiscoveredWriterData {
	struct DDS::PublicationBuiltinTopicData ddsPublicationData;
	struct WriterProxy writerProxy;
};

struct DiscoveredReaderData {
	struct DDS::SubscriptionBuiltinTopicData ddsSubscriptionData;
	struct ReaderProxy readerProxy;
	ContentFilterProperty_t contentFilterProperty;
};

struct DiscoveredTopicData {
	struct DDS::TopicBuiltinTopicData ddsTopicData;
};