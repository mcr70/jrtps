Quality of Service

 Quality Of Service is a way to configure system, and to make a contract between readers and writers 
 of the expected behavior. 

* Reliability

 Reliability QoS determines how samples are communicated from writers to readers. RELIABLE kind
 causes RTPS entities to exchange <HeartBeat> and <AckNack> messages. I.e. readers will report
 back to writers what samples they have received, and what are still missing.
 
 When BEST_EFFORT kind is used, writers just sends samples to readers. That is the only promise
 writer makes about delivery of messages. Samples might be lost during transmission, or reader
 might decide to drop samples before it passes them to application.
 
 If a reader requests BEST_EFFORT reliability but writer offers RELIABLE, a communication will
 be established as BEST_EFFORT, since BEST_EFFORT entities does not use <HeartBeat> and <AckNack>
 sub messages.
 
 Reliability QoS between reader and writer is compatible, if 
 
+------
 offered.kind >= requested.kind
+------
 
 where RELIABLE > BEST_EFFORT
 
 

 